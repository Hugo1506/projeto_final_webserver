{"ast":null,"code":"var _jsxFileName = \"/home/hugo/ros3_ws/webserver/frontend/src/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  onRegister\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3000/addUser', formData);\n      if (response.status === 201) {\n        const {\n          token\n        } = response.data;\n        onRegister(token); // Pass the token to the handler\n        setMessage('Registration successful');\n        navigate('/welcome');\n      }\n    } catch (error) {\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: handleChange,\n      placeholder: \"Username\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: handleChange,\n      placeholder: \"Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"RylzShXIBIK6SdjyBGAxuoTXk/o=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Register","onRegister","_s","formData","setFormData","username","password","message","setMessage","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","status","token","data","error","onSubmit","children","type","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hugo/ros3_ws/webserver/frontend/src/Register.js"],"sourcesContent":["import React, { useState}  from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Form.css';\n\nconst Register = ({ onRegister }) => {\n  const [formData, setFormData] = useState({ username: '', password: '' });\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3000/addUser', formData);\n      if (response.status === 201) {\n        const { token } = response.data;\n        onRegister(token); // Pass the token to the handler\n        setMessage('Registration successful');\n        navigate('/welcome');\n      }\n    } catch (error) {\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"username\" onChange={handleChange} placeholder=\"Username\" required />\n      <input type=\"password\" name=\"password\" onChange={handleChange} placeholder=\"Password\" required />\n      <button type=\"submit\">Register</button>\n      <p>{message}</p>\n    </form>\n  );\n};\n\nexport default Register;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IAAEU,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BP,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACQ,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,+BAA+B,EAAEf,QAAQ,CAAC;MAC5E,IAAIc,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM;UAAEC;QAAM,CAAC,GAAGH,QAAQ,CAACI,IAAI;QAC/BpB,UAAU,CAACmB,KAAK,CAAC,CAAC,CAAC;QACnBZ,UAAU,CAAC,yBAAyB,CAAC;QACrCC,QAAQ,CAAC,UAAU,CAAC;MACtB;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdd,UAAU,CAAC,sCAAsC,CAAC;IACpD;EACF,CAAC;EAED,oBACET,OAAA;IAAMwB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAC3BzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACZ,IAAI,EAAC,UAAU;MAACa,QAAQ,EAAEhB,YAAa;MAACiB,WAAW,EAAC,UAAU;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7FjC,OAAA;MAAO0B,IAAI,EAAC,UAAU;MAACZ,IAAI,EAAC,UAAU;MAACa,QAAQ,EAAEhB,YAAa;MAACiB,WAAW,EAAC,UAAU;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjGjC,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvCjC,OAAA;MAAAyB,QAAA,EAAIjB;IAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEX,CAAC;AAAC9B,EAAA,CAhCIF,QAAQ;EAAA,QAGKH,WAAW;AAAA;AAAAoC,EAAA,GAHxBjC,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}